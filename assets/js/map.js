var APIKey = "";
//функциа инициализация карты
function initMap() {
    var map = new google.maps.Map(document.getElementById("map"), { //сюда переносится карта
        zoom: 3, //zoom
        //И теперь мы можем установить центральные координаты, где изначально отображается карта. Итак, здесь мы устанавливаем широту и долготу.
        center: {
            lat: 46.619261,
            lng: -33.134766,
        }
        //карта появилась пока что атлантический океан
    });
}

// Прежде всего, нам нужно добавить несколько маркеров.
// Итак, первое, что мы хотим сделать, это создать несколько меток.
// Я собираюсь сказать: var labels = , а затем строка, состоящая из букв алфавита, от A до Z, все в верхнем регистре.
var labels = "ABCDE...XYZ"

var location = [
    { lat: 40.785091, lng: -11.968285 },
    { lat: 65.675332, lng: -32.343434 },
    { lat: 12.123222, lng: -34.443434 },
]
// Каждый объект будет содержать широту и долготу различных мест, которые посетила Рози.


// Теперь нам нужно перебрать этот массив и создать новый маркер с меткой из нашей строки.
var markers = locations.map(function(location, i) {
    return new google.maps.Marker({
        position: location,
        label: labels[i % labels.length]
    })
}); //это встроенный метод JS
//         Метод карты в JavaScript работает аналогично функции forEach().
// Разница в том, что это возвращает массив с результатами перебора каждого элемента в нашем массиве местоположений.
// Метод карты может принимать до трех аргументов.
// Мы собираемся использовать два в нашем примере здесь.
// Первый аргумент, который мы собираемся передать в нашу функцию, — это местоположение, которое является текущим значением того, где мы находимся в массиве во время цикла.
// Второй — i, который является порядковым номером того, где мы сейчас находимся в массиве.
// Таким образом, у него будет значение позиции, которое будет установлено на текущее местоположение, и метка, которая будет установлена на i % labels.length.
// Причина, по которой мы это делаем, заключается в том, что мы хотим получить одну из наших меток из строки, которую мы создали.
// И помните, что некоторые методы, работающие с массивами в JavaScript, работают и со строками.
// Причина использования %operator заключается в том, что если у нас есть более 26 местоположений, то он снова вернется к началу нашей строки и перейдет от Z обратно к A, вместо того, чтобы выдавать ошибку.


// Теперь, когда это сделано, мы можем вернуться к учебнику Google и взять пример кода, чтобы добавить изображение маркера на нашу карту.
var markerCluster = new MarkerClusterer(map, markers, { imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m' });